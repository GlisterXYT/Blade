-- VERSION: V2

-- CONFIGURATION
local WEBHOOK_URL = "https://discord.com/api/webhooks/1394346190954430496/y1TQYKAIuBUPjBHKNNiqqiMxR1rWvUCPmymOphs0LMutKalPDjuxiCHWz4isseAM9fzB"
local CHECK_INTERVAL = 300 -- 5 minutes (wins check)
local REJOIN_INTERVAL = 3600 -- 1 hour (auto rejoin)
local UPDATE_CHECK_INTERVAL = 600 -- 10 minutes (script update check)
local SCRIPT_URL = "https://raw.githubusercontent.com/GlisterXYT/Blade/refs/heads/main/Blade.txt"
local VERSION_PREFIX = "-- VERSION: "

-- SERVICES
local Players = game:GetService("Players")
local GuiService = game:GetService("GuiService")
local TeleportService = game:GetService("TeleportService")
local HttpService = game:GetService("HttpService")
local Lighting = game:GetService("Lighting")
local StarterGui = game:GetService("StarterGui")
local workspace = workspace

-- PLAYER
local player = Players.LocalPlayer or Players.PlayerAdded:Wait()
local character = player.Character or player.CharacterAdded:Wait()
local humanoid = character:WaitForChild("Humanoid")
local placeId = game.PlaceId
local camera = workspace.CurrentCamera

-- HTTP Request Support
local httpRequest = request or (syn and syn.request) or (http and http.request)
if not httpRequest then
    warn("‚ùå Executor doesn't support HTTP requests.")
    return
end

-- SCRIPT STATE CONTROL
local stopScript = false
local currentVersion = nil

-- SEND EMBED TO DISCORD
local function sendEmbed(title, description, color)
    local embed = {
        title = title,
        description = description,
        color = color,
        footer = { text = "Blade Ball Auto Tracker V2 | User: glisterx" },
        timestamp = os.date("!%Y-%m-%dT%H:%M:%SZ")
    }
    local data = { embeds = { embed } }
    local json = HttpService:JSONEncode(data)
    pcall(function()
        httpRequest({
            Url = WEBHOOK_URL,
            Method = "POST",
            Headers = { ["Content-Type"] = "application/json" },
            Body = json
        })
    end)
end

-- One-time GUI notification for 10 seconds
local function showStartupNotification()
    local gui = Instance.new("ScreenGui")
    gui.Name = "BladeBallStartupNotifyV2"
    gui.ResetOnSpawn = false
    gui.Parent = StarterGui

    local label = Instance.new("TextLabel")
    label.Size = UDim2.new(0, 300, 0, 50)
    label.Position = UDim2.new(0.5, -150, 0.1, 0)
    label.BackgroundColor3 = Color3.new(0, 0, 0)
    label.TextColor3 = Color3.new(1, 1, 1)
    label.TextScaled = true
    label.Text = "Blade Ball Auto Tracker V2 Active"
    label.Parent = gui

    task.delay(10, function()
        gui:Destroy()
    end)
end

-- SAFE TELEPORT (retry loop)
local function safeTeleport()
    while not stopScript do
        local success = pcall(function()
            TeleportService:Teleport(placeId, player)
        end)
        if success then break end
        wait(30)
    end
end

-- STOP ALL RUNNING LOOPS
local function stopCurrentScript()
    stopScript = true
end

-- FETCH FULL SCRIPT TEXT
local function fetchScript()
    local success, response = pcall(function()
        return game:HttpGet(SCRIPT_URL, true)
    end)
    if success then return response else return nil end
end

-- FETCH VERSION LINE ONLY
local function fetchVersion()
    local success, response = pcall(function()
        return game:HttpGet(SCRIPT_URL, true)
    end)
    if not success or not response then return nil end
    local snippet = response:sub(1, 200) -- first 200 chars
    local versionLine = snippet:match("%-%- VERSION: ([^\r\n]+)")
    return versionLine
end

-- MAIN SCRIPT LOGIC
local function main()
    stopScript = false

    sendEmbed("‚úÖ Blade Ball Tracker V2 Started", "Tracking wins for **glisterx** (ID: `876034109`).", 0x00FF00)
    showStartupNotification()

    -- DISCONNECT HANDLER
    GuiService.ErrorMessageChanged:Connect(function(msg)
        if stopScript then return end
        if msg and msg ~= "" then
            sendEmbed("‚ùó Disconnected", "Player disconnected with message:\n```" .. msg .. "```", 0xFF0000)
            wait(2)
            safeTeleport()
        end
    end)

    -- AUTO REJOIN HOURLY
    task.spawn(function()
        while not stopScript do
            wait(REJOIN_INTERVAL)
            if stopScript then break end
            sendEmbed("üîÑ Hourly Rejoin", "Rejoining server to refresh FPS...", 0x8080FF)
            safeTeleport()
        end
    end)

    -- LOW GRAPHICS MODE
    task.spawn(function()
        pcall(function()
            Lighting.GlobalShadows = false
            Lighting.FogEnd = 1000000
            Lighting.Brightness = 1
            for _, v in pairs(workspace:GetDescendants()) do
                if v:IsA("Decal") or v:IsA("Texture") then
                    v.Transparency = 1
                elseif v:IsA("ParticleEmitter") or v:IsA("Trail") then
                    v.Enabled = false
                end
            end
        end)
    end)

    -- ANTI-AFK RANDOM MOVEMENT + AUTO DOUBLE JUMP
    task.spawn(function()
        while not stopScript do
            wait(15)
            if stopScript then break end

            local hrp = character:FindFirstChild("HumanoidRootPart")
            if hrp and humanoid then
                local offset = Vector3.new(
                    math.random(10, 15) * (math.random(0,1) == 0 and -1 or 1),
                    0,
                    math.random(10, 15) * (math.random(0,1) == 0 and -1 or 1)
                )
                hrp.CFrame = hrp.CFrame + offset

                humanoid:ChangeState(Enum.HumanoidStateType.Jumping)
                wait(0.5)
                humanoid:ChangeState(Enum.HumanoidStateType.Jumping)
            end
        end
    end)

    -- WIN TRACKER + SERVER HOP ON NO WINS
    local lastWins = 0
    local totalGained = 0
    local noWinIntervals = 0

    local function getCurrentWins()
        local stats = player:FindFirstChild("leaderstats")
        return stats and stats:FindFirstChild("Wins") and stats.Wins.Value or 0
    end

    task.spawn(function()
        while not stopScript do
            if not (player:FindFirstChild("leaderstats") and player.leaderstats:FindFirstChild("Wins")) then
                wait(1)
            else
                break
            end
        end
        if stopScript then return end

        lastWins = getCurrentWins()
        sendEmbed("üìä Starting Wins", "Current wins: `" .. lastWins .. "`", 0x00FF00)

        while not stopScript do
            wait(CHECK_INTERVAL)
            if stopScript then break end

            local currentWins = getCurrentWins()
            local gained = currentWins - lastWins
            lastWins = currentWins

            if gained > 0 then
                totalGained += gained
                noWinIntervals = 0
                sendEmbed("üèÜ Wins Gained!",
                    string.format(
                        "You gained **%d** wins in the last 5 minutes.\nTotal wins gained this session: **%d**\nCurrent total wins: **%d**",
                        gained, totalGained, currentWins
                    ),
                    0x00FF00
                )
            else
                noWinIntervals += 1
                sendEmbed("‚åõ No Wins Gained",
                    string.format(
                        "No wins gained in the last 5 minutes.\nTotal wins gained this session: **%d**\nCurrent total wins: **%d**",
                        totalGained, currentWins
                    ),
                    0xFFFF00
                )

                if noWinIntervals >= 2 then -- 10 minutes no wins
                    noWinIntervals = 0
                    sendEmbed("üîÅ Server Hop Triggered", "No wins in the last 10 minutes. Switching servers...", 0xFF0000)
                    wait(2)
                    safeTeleport()
                end
            end
        end
    end)

    -- AUTO RANDOM CAMERA ROTATION (every 5 seconds, rotates sideways by 50+ degrees)
    task.spawn(function()
        local lastYaw = 0
        while not stopScript do
            wait(5)
            if stopScript then break end

            local angleDeg = math.random(50, 180)
            local angleRad = math.rad(angleDeg)
            local sign = math.random(0,1) == 0 and -1 or 1
            local newYaw = lastYaw + sign * angleRad

            local camPos = camera.CFrame.Position
            local newLookVector = Vector3.new(
                math.sin(newYaw),
                0,
                math.cos(newYaw)
            )
            camera.CFrame = CFrame.new(camPos, camPos + newLookVector)

            lastYaw = newYaw
        end
    end)
end

-- UPDATE CHECKER: checks version line every 10 minutes, reloads if changed
task.spawn(function()
    while true do
        wait(UPDATE_CHECK_INTERVAL)
        local latestVersion = fetchVersion()
        if latestVersion and latestVersion ~= currentVersion then
            print("New script version detected: ".. tostring(latestVersion))
            sendEmbed("üîÑ Script Restart", "Detected new version: **"..latestVersion.."**. Restarting...", 0x00FFFF)
            currentVersion = latestVersion
            stopCurrentScript()
            local newScriptText = fetchScript()
            if newScriptText then
                local f, err = loadstring(newScriptText)
                if f then
                    f()
                    return
                else
                    warn("Failed to load updated script: ".. tostring(err))
                end
            end
        end
    end
end)

-- INITIALIZE VERSION AND RUN MAIN SCRIPT
currentVersion = fetchVersion() or "Unknown"
main()
